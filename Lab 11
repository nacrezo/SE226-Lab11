import tkinter as tk
from tkinter import simpledialog
import mysql.connector
import datetime

database = mysql.connector.connect(
    host="localhost",
    user="root",
    passwd=""
)

cursorObject = database.cursor()
cursorObject.execute("CREATE DATABASE IF NOT EXISTS MarvelDatabase")

connection = mysql.connector.connect(
    host="localhost",
    user="root",
    database="MarvelDatabase",
    passwd=""
)

if connection.is_connected():
    db_Info = connection.get_server_info()
    print("Connected to", db_Info)
    cursor = connection.cursor()
    cursor.execute("select database();")
    record = cursor.fetchone()
    print("Database", record)

# Create table
mySql_Create_Table_Query = """
    CREATE TABLE IF NOT EXISTS Marvel (
        ID int(10) NOT NULL,
        MOVIE VARCHAR(250) NOT NULL,
        DATE VARCHAR(50) NOT NULL,
        MCU_PHASE VARCHAR(250) NOT NULL,
        PRIMARY KEY (ID)
    )
"""
cursor.execute(mySql_Create_Table_Query)

insert_query = """
    INSERT INTO Marvel (ID, MOVIE, DATE, MCU_PHASE) 
    VALUES (%s, %s, %s, %s)
"""

def parse_date(date_str):
    try:
        date_obj = datetime.datetime.strptime(date_str, "%B%d,%Y")
        return date_obj.strftime("%Y-%m-%d")
    except ValueError:
        print(f"Error parsing date: {date_str}")
        return None

def generate_unique_id():
    cursor.execute("SELECT MAX(ID) FROM Marvel")
    max_id = cursor.fetchone()[0]
    if max_id is None:
        return 1
    else:
        return max_id + 1

with open('Marvel.txt', 'r') as file:
    for line in file:
        data = line.strip().split(maxsplit=3)
        if len(data) == 4:
            data[0] = generate_unique_id()
            data[2] = parse_date(data[2])
            if data[2]:
                cursor.execute(insert_query, data)
            else:
                print(f"Skipping line due to invalid date: {line}")
        else:
            print(f"Skipping invalid line: {line}")


connection.commit()

def read_data_from_file():
    data = []
    with open("Marvel.txt", "r") as file:
        for line in file:
            data.append(line.strip().split())
    return data

def populate_dropdown(data):
    dropdown['menu'].delete(0, 'end')
    for item in data:
        dropdown['menu'].add_command(label=item[0], command=lambda id=item[0]: on_dropdown_select(id))

def on_dropdown_select(id):
    dropdown_var.set(id)
    textbox.delete(1.0, tk.END)
    for item in data:
        if item[0] == id:
            textbox.insert(tk.END, " ".join(item) + "\n")

def on_add_click():
    value = simpledialog.askstring("Input", "Enter ID MOVIE DATE MCU PHASE:")
    if value:
        data.append(value.split())
        populate_dropdown(data)

def on_list_all_click():
    textbox.delete(1.0, tk.END)
    for item in data:
        textbox.insert(tk.END, " ".join(item) + "\n")

root = tk.Tk()
root.title("Marvel Data Management")

data = read_data_from_file()

dropdown_var = tk.StringVar(root)

dropdown = tk.OptionMenu(root,dropdown_var, *data[0])
dropdown.pack()

textbox = tk.Text(root, height=10, width=50)
textbox.pack()

add_button = tk.Button(root, text="Add", command=on_add_click)
add_button.pack(side=tk.LEFT)

list_all_button = tk.Button(root, text="LIST ALL", command=on_list_all_click)
list_all_button.pack(side=tk.LEFT)

def run_queries():
    print("All Movies:")
    cursor.execute("SELECT * FROM Marvel")
    for record in cursor.fetchall():
        print(record)

    cursor.execute("DELETE FROM Marvel WHERE MOVIE = 'The Incredible Hulk'")
    connection.commit()
    print("Removed 'The Incredible Hulk'")

    print("Phase 2 Movies:")
    cursor.execute("SELECT * FROM Marvel WHERE MCU_PHASE = 'Phase2'")
    for record in cursor.fetchall():
        print(record)

    cursor.execute("UPDATE Marvel SET DATE = '2017-11-03' WHERE MOVIE = 'Thor: Ragnarok'")
    connection.commit()
    print("Updated date for 'Thor: Ragnarok'")


run_queries()

root.mainloop()

cursor.execute("DROP DATABASE MarvelDatabase")
